version: 0.2

run-as: root
env:
  variables:
    TF_VERSION: "0.12.28"
    GO_VERSION: "1.15"
    OS: "linux"
    ARCH: "amd64"

phases:
  install:
    commands:
      # install required binary
      - "curl -s -qL -o /usr/bin/jq https://stedolan.github.io/jq/download/linux64/jq"
      - "chmod +x /usr/bin/jq"
      - wget --no-cookies --no-check-certificate https://golang.org/dl/go$GO_VERSION.$OS-$ARCH.tar.gz
      - tar -C /usr/local -xzf go$GO_VERSION.$OS-$ARCH.tar.gz
      - export PATH=$PATH:/usr/local/go/bin
      - "curl -s -qL -o terraform.zip https://releases.hashicorp.com/terraform/${TF_VERSION}/terraform_${TF_VERSION}_linux_amd64.zip"
      - "unzip -o terraform.zip -d /usr/bin"
      - "rm terraform.zip"
  pre_build:
    commands:
      - export AWS_RAW_CRED=$(curl --silent http://169.254.170.2:80$AWS_CONTAINER_CREDENTIALS_RELATIVE_URI)
      - export AWS_ACCESS_KEY_ID=$(echo $AWS_RAW_CRED | jq -r '.AccessKeyId')
      - export AWS_SECRET_ACCESS_KEY=$(echo $AWS_RAW_CRED | jq -r '.SecretAccessKey')
      - export AWS_SESSION_TOKEN=$(echo $AWS_RAW_CRED | jq -r '.Token')

  build:
    commands:
      - echo $PWD
      - cd golang
      - GOARCH=amd64 GOOS=linux go build -gcflags='-N -l' -o . .
      - zip csv_parquet.zip golang
      - aws s3 cp csv_parquet.zip s3://csv-to-parquet-config-bucket/lambdaZipFiles/csv_parquet.zip
      - cd ../terraform
      - terraform init 
      - terraform plan
      - DESTROY=${DESTROY:-false}
      - |
        if [ $DESTROY = false ]; then
          terraform apply -auto-approve
        else
          terraform destroy -auto-approve
        fi

  post_build:
    commands:
      - echo "terraform completed on `date`"

artifacts:
  files:
    - '**/*'